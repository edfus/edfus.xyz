const fonts=[{name:"筑紫A丸ゴシック",url:"https://cdn.jsdelivr.net/gh/edfus/storage/fonts/筑紫A丸ゴシック.woff2",unicodeRange:"U+4E00-9FCB",type:"font/woff2"},{name:"Consolas",url:"https://cdn.jsdelivr.net/gh/edfus/storage/fonts/Consolas.woff2",unicodeRange:"U+0000-007F",type:"font/woff2"}],fontObejectSample={name:"Consolas",unicodeRange:"U+0000-007F",type:"font/woff2",arrayBuffer:""},openDB=()=>{let e=indexedDB.open("Fonts_Database",1);return new Promise((n,r)=>{e.onsuccess=e=>n(e.target.result),e.onerror=e=>r(Error("woah",e.target.error)),e.onupgradeneeded=e=>{0===e.oldVersion&&e.target.result.createObjectStore("fonts",{keyPath:"name",autoIncrement:!1}).createIndex("fontNameIndex","name",{unique:!0})}})},blobToArrayBuffer=e=>new Promise((n,r)=>{const o=new FileReader;o.addEventListener("loadend",e=>{n(o.result)}),o.addEventListener("error",r),o.readAsArrayBuffer(e)}),arrayBufferToBlob=(e,n)=>new Blob([e],{type:n});openDB().then(e=>{const n=e.transaction("fonts","readonly").objectStore("fonts");fonts.forEach(r=>{let o=n.get(r.name);o.onsuccess=n=>{let o=n.target.result;var t,a;void 0!==o?postMessage({name:o.name,url:URL.createObjectURL((t=o.arrayBuffer,a=o.type,new Blob([t],{type:a}))),unicodeRange:o.unicodeRange}):"connection"in navigator&&!navigator.connection.saveData?fetch(new Request(r.url,{method:"GET",headers:new Headers,mode:"cors",referrer:"no-referrer",redirect:"follow"})).then(e=>{if(e.ok)return e.blob();console.dir(e)}).then(n=>{var o;postMessage({name:r.name,url:URL.createObjectURL(n),unicodeRange:r.unicodeRange}),(o=n,new Promise((e,n)=>{const r=new FileReader;r.addEventListener("loadend",n=>{e(r.result)}),r.addEventListener("error",n),r.readAsArrayBuffer(o)})).then(n=>{e.transaction("fonts","readwrite").objectStore("fonts").add({name:r.name,unicodeRange:r.unicodeRange,type:r.type,arrayBuffer:n})})}).catch(e=>console.error(e)):console.info("[Metered Network?] Download "+r.name+" cancelled.")},o.onerror=e=>Error(e.error)})});