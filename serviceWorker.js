const version="6.4.2--rel",articleUpdate="-20-08-27-A",cacheName="cache-6.4.2--rel-20-08-27-A",CDNname="https://cdn.jsdelivr.net/gh/edfus/storage",cacheResources=["/","/combine.js","/css/style.css","/css/style-more.css",CDNname+"/js/script@1.5.js",CDNname+"/js/script-category@1.4.js",CDNname+"/js/script-more@1.2.js",CDNname+"/glightbox/glightbox@1.2.min.js"],DLC=["https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js",CDNname+"/gitalk/gitalk.css"];self.addEventListener("install",e=>{self.skipWaiting(),e.waitUntil(caches.open(cacheName).then(e=>e.addAll(cacheResources).then(()=>{"connection"in navigator&&!navigator.connection.saveData&&e.addAll(DLC)})))}),self.addEventListener("activate",(function(e){return console.log("[ServiceWorker] Activate."),e.waitUntil(caches.keys().then((function(e){return Promise.all(e.map((function(e){if(e!==cacheName)return console.log("[ServiceWorker] Removing old cache:",e),caches.delete(e)})))}))),self.clients.claim()})),self.addEventListener("fetch",(function(e){let t=e.request.url.split("//")[1].split("/")[0];/\.mp3|\.mp4/.test(e.request.url)?e.respondWith(fetch(e.request,{headers:new Headers})):e.respondWith(caches.match(e.request).then((async function(s){if(null!=s)return s;{if("only-if-cached"===e.request.cache&&"same-origin"!==e.request.mode)return void console.dir(e.request);let s=e.request.clone();return await fetch(s).then(async e=>{if((!e||200!==e.status||"basic"!==e.type)&&("cors"!==e.type||"cdn.jsdelivr.net"!==t))return e;if("GET"===s.method){const t=await caches.open(cacheName);await t.put(s.url,e.clone())}return e})}})))}));