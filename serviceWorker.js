const version="5.3.2--rel",cacheName="cache-"+version,scriptVersion="@1.1",CDNname="https://cdn.jsdelivr.net/gh/edfus/storage",cacheResources=["/combine.js","/webWorker.js",CDNname+"/css/style.css",CDNname+"/css/style-more.css",CDNname+"/js/script@1.4.js",CDNname+"/js/script-category@1.3.js",CDNname+"/js/script-more@1.1.js",CDNname+"/glightbox/glightbox@1.1.min.js"],DLC=["https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js",CDNname+"/gitalk/gitalk.css"];self.addEventListener("install",e=>{self.skipWaiting(),e.waitUntil(caches.open(cacheName).then(e=>e.addAll(cacheResources).then(()=>{"connection"in navigator&&!navigator.connection.saveData&&e.addAll(DLC)})))}),self.addEventListener("activate",(function(e){return console.log("[ServiceWorker] Activate."),e.waitUntil(caches.keys().then((function(e){return Promise.all(e.map((function(e){if(e!==cacheName)return console.log("[ServiceWorker] Removing old cache:",e),caches.delete(e)})))}))),self.clients.claim()})),self.addEventListener("fetch",(function(e){let t=e.request.url.split("//")[1].split("/")[0];e.respondWith(caches.match(e.request).then((async function(s){if(null!=s)return s;{if("only-if-cached"===e.request.cache&&"same-origin"!==e.request.mode)return void console.dir(e.request);let s=e.request.clone();return await fetch(s).then(async e=>{if((!e||200!==e.status||"basic"!==e.type)&&("cors"!==e.type||"cdn.jsdelivr.net"!==t))return e;if("GET"===s.method){const t=await caches.open(cacheName);await t.put(s.url,e.clone())}return e})}})))}));