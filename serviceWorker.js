const version="6.4.5--rel",cacheName="cache-"+version,CDNname="https://cdn.jsdelivr.net/gh/edfus/storage",cacheResources=["/","/combine.js","/css/style.css","/css/style-more.css",CDNname+"/js/script@1.5.js",CDNname+"/js/script-category@1.4.js",CDNname+"/js/script-more@1.2.js",CDNname+"/glightbox/glightbox@1.2.min.js"],DLC=["https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js",CDNname+"/gitalk/gitalk.css"];self.addEventListener("install",e=>{self.skipWaiting(),e.waitUntil(caches.open(cacheName).then(e=>e.addAll(cacheResources).then(()=>{"connection"in navigator&&!navigator.connection.saveData&&DLC.length&&e.addAll(DLC)})))}),self.addEventListener("activate",e=>(console.info("[ServiceWorker] Activate."),e.waitUntil(caches.keys().then(e=>Promise.all(e.map(e=>{if(e!==cacheName)return console.info("[ServiceWorker] Removing old cache: ",e),caches.delete(e)})))),self.clients.claim())),self.addEventListener("fetch",e=>e.respondWith((async()=>{if(/(\.mp3|\.mp4|\.woff2)$/.test(e.request.url))return fetch(e.request,{headers:new Headers});let s=await e.preloadResponse;if(!s)try{s=await fetch(e.request)}finally{if(!s||200!==s.status){const s=await caches.match(e.request.url);return s||Response.error()}}if("GET"===e.request.method&&["cors","basic"].includes(s.type)){const t=s.clone();e.waitUntil(caches.open(cacheName).then(s=>s.put(e.request.url,t)))}return s})()));